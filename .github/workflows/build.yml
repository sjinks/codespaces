name: Build

on:
  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare list of images to build
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.set-matrix.outputs.images }}
    steps:
      - name: Check out the source code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Set matrix
        id: set-matrix
        run: echo images="$(jq '."x-build"' images/src/*/.devcontainer.json | jq --slurp -c .)" >> "${GITHUB_OUTPUT}"

  build-image:
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.images) }}
    name: Build ${{ matrix.image.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 0

      - name: Check changed files
        id: changes
        run: |
          base="${{ github.event.pull_request.base.sha }}"
          head="${{ github.event.pull_request.head.sha }}"
          image="images/src/${{ matrix.image.image-name }}"
          changes="$(git diff --name-only "${base}" "${head}" -- "${image}" | grep -Fv "${image}/README.md" || true)"
          if [ -n "${changes}" ]; then
            echo needs_build=true >> "${GITHUB_OUTPUT}"
          else
            echo needs_build=false >> "${GITHUB_OUTPUT}"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
        if: steps.changes.outputs.needs_build == 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@16c0bc4a6e6ada2cfd8afd41d22d95379cf7c32a # v2.8.0
        if: steps.changes.outputs.needs_build == 'true'

      - name: Install @devcontainers/cli
        run: npm install -g @devcontainers/cli
        if: steps.changes.outputs.needs_build == 'true'

      - name: Build image
        run: devcontainer build --workspace-folder "images/src/${{ matrix.image.image-name }}" --platform linux/amd64,linux/arm64 --output type=image
        if: steps.changes.outputs.needs_build == 'true'
