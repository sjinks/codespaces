name: Trivy Scan

on:
  push:
  schedule:
    - cron: '0 0 * * 1'

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare list of images to build
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.set-matrix.outputs.images }}
    steps:
      - name: Check out the source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Set matrix
        id: set-matrix
        run: echo images="$(jq '."x-build"' images/src/*/.devcontainer.json | jq --slurp -c .)" >> "${GITHUB_OUTPUT}"

  scan-image:
    needs: prepare
    name: 'Build and Scan: ${{ matrix.image.name }}'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.images) }}
    steps:
      - name: Check out the source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Check changed files
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            base="${{ github.event.before }}"
            head="${{ github.event.after }}"
            image="images/src/${{ matrix.image.image-name }}"
            changes="$(git diff --name-only "${base}" "${head}" -- "${image}" | grep -Fv "${image}/README.md" || true)"
            if [ -n "${changes}" ]; then
              echo needs_build=true >> "${GITHUB_OUTPUT}"
            else
              echo needs_build=false >> "${GITHUB_OUTPUT}"
            fi
          else
            echo needs_build=true >> "${GITHUB_OUTPUT}"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
        if: steps.changes.outputs.needs_build == 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0
        if: steps.changes.outputs.needs_build == 'true'

      - name: Install @devcontainers/cli
        run: npm install -g @devcontainers/cli
        if: steps.changes.outputs.needs_build == 'true'

      - name: Build image
        run: devcontainer build --workspace-folder "images/src/${{ matrix.image.image-name }}" --image-name ${{ matrix.image.image-name }}
        if: steps.changes.outputs.needs_build == 'true'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@e5f43133f6e8736992c9f3c1b3296e24b37e17f2 # 0.10.0
        if: ${{ steps.changes.outputs.needs_build == 'true' && github.event.sender.login != 'dependabot[bot]' }}
        with:
          image-ref: '${{ matrix.image.image-name }}:latest'
          format: sarif
          output: trivy-${{ matrix.image.image-name }}.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@83f0fe6c4988d98a455712a27f0255212bba9bd4 # v2.3.6
        if: ${{ steps.changes.outputs.needs_build == 'true' && github.event.sender.login != 'dependabot[bot]' }}
        with:
          sarif_file: trivy-${{ matrix.image.image-name }}.sarif

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@e5f43133f6e8736992c9f3c1b3296e24b37e17f2 # 0.10.0
        if: steps.changes.outputs.needs_build == 'true'
        with:
          image-ref: '${{ matrix.image.image-name }}:latest'
          format: table
